#!/usr/bin/env groovy
pipeline {

    agent any
    environment {
        
        GIT_TAG_COMMIT = sh(script: 'git describe --tags --always', returnStdout: true).trim()
        NEW_VERSION = '1.0'
        JIRA_SITE='JIRA'
        GIT_COMMIT_MSG = sh(script: 'git log -1 --oneline')
        GIT_COMMIT_AUTHOR = sh(script: 'git log --format="medium" -1 ${GIT_COMMIT}')
        GIT_COMMIT_PRETTY = sh(script: 'git log -1 --pretty=%B' , returnStdout: true).trim()
        }
  
    stages {
        stage ('Build') {
            steps {
                        
                echo 'This is a minimal pipeline.'
             
                echo " is GIT_TAG_COMMIT ${GIT_TAG_COMMIT}"
               
                echo "Commit msg is: ${GIT_COMMIT_MSG}"
               
                echo "author hash is: ${GIT_COMMIT_PRETTY}"
               
                echo "building project here"
            
            }
        }
        
        stage('JIRA') {
            steps{
                 script{
                        def serverInfo = jiraGetServerInfo()
                        echo serverInfo.data.toString()
                        
               
                        println "${GIT_COMMIT_PRETTY}".tokenize("-")
                        "${GIT_COMMIT_PRETTY}".tokenize(",").each {
                                println "Number ${it}"
                                def searchResults = jiraJqlSearch jql: "project = TEST AND issuekey = '${it}'"
                                def issues = searchResults.data.issues
                                jiraAddComment(issueKey: "${it}",
                                    body: " Project new  version is ${NEW_VERSION}"
                                )
                                
                                def transitions = jiraGetIssueTransitions idOrKey: "${it}"
                                echo transitions.data.toString()
                                def transitionInput = [ transition: [ id: '21'] ]
                                jiraTransitionIssue idOrKey: "${it}", input: transitionInput, site: 'JIRA'
                                
                            }
                        
                 }
            }
        }
       
    }
    
}